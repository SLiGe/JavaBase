package com.java.mode.flyweight;

/**
 * 享元模式:如果在一个系统中存在多个相同的对象,那么只需要共享一份对象的拷贝,而不必为每一次使用都创建新的对象
 * {
 * 1.享元工程：用以创建具体享元类，维护相同的享元对象。它保证相同的享元对象可以被系统共享。
 * - 其内部使用了类似单例模式的算法，当请求对象存在时，直接返回对象，不存在时，再创建对象
 * 2.抽象享元:定义需共享的对象的业务接口。享元类被创建出来总是为了实现某些特定的业务逻辑，二抽象享元便定义这些逻辑的语义行为
 * 3.具体享元类：实现抽象享元类的接口，完成某一具体逻辑。
 * 4.Main：使用享元模式的组件，通过享元工程取得享元对象
 * }
 * 优点: 大大减少对象的创建，降低系统的内存，使效率提高。
 * 缺点:提高了系统的复杂度，需要分离出外部状态和内部状态，而且外部状态具有固有化的性质，不应该随着内部状态的变化而变化，否则会造成系统的混乱。
 * <p>
 * 此类为抽象享元
 * </p>
 *
 * @author : Gary
 * @since 2019/11/08 14:12
 */
public interface IReportManager {

    String createReport();
}
